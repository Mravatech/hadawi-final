import 'package:hadawi_app/featuers/occasions/domain/entities/occastion_entity.dart';

class OccasionModel extends OccasionEntity {
  OccasionModel(
      {
      required super.isForMe,
      required super.occasionName,
      required super.occasionDate,
        required super.isActive,
      required super.occasionId,
      required super.occasionType,
      required super.moneyGiftAmount,
      required super.personId,
      required super.personName,
      required super.personPhone,
      required super.personEmail,
      required super.giftImage,
      required super.giftName,
      required super.giftLink,
      required super.giftPrice,
      required super.giftType,
      required super.isSharing,
      required super.receiverName,
        required super.receiverPhone,
        required super.bankName,
        required super.ibanNumber,
        required super.isContainName,
        required super.giftCard,
        required super.city,
        required super.district,
        required super.note,
        required super.isPrivate,
        required super.discount,
        required super.appCommission,
        required super.deliveryPrice,
        required super.type,
      required super.packageImage,
      required super.packagePrice,
      });

  factory OccasionModel.fromJson(Map<String, dynamic> json) => OccasionModel(
        isForMe: json['isForMe']??'',
        isActive: json['isActive']??false,
        occasionName: json['occasionName']??'',
        occasionDate: json['occasionDate']??'',
        occasionId: json['occasionId']??'',
        occasionType: json['occasionType']??'',
        moneyGiftAmount: json['moneyGiftAmount']??0.0,
        personId: json['personId']??'',
        personName: json['personName']??'',
        personPhone: json['personPhone']??'',
        personEmail: json['personEmail']??'',
        giftImage: json['occasionImage']??['https://img.freepik.com/free-vector/3d-gift-box-wrapped-golden-ribbon_173207-1906.jpg?t=st=1746216356~exp=1746219956~hmac=545b22ab3fa80ae151b92be716931720ea29bab0aa3b397ab0f62f198045d6c1&w=826'],
        giftName: json['giftName']??'',
        giftLink: json['giftLink']??'',
        giftPrice: json['giftPrice']??0.0,
        giftType: json['giftType']??'',
        isSharing: json['isSharing']??false,
        receiverName: json['receiverName']??'',
        receiverPhone: json['receiverPhone']??'',
        bankName: json['bankName']??'',
        ibanNumber: json['ibanNumber']??'',
        isContainName: json['isContainName']??false,
        giftCard: json['giftCard']??'',
        city: json['city']??'',
        district: json['district']??'',
        note: json['note']??'',
        isPrivate: json['isPrivate']??false,
        discount: json['discount']??0.0,
        appCommission: json['appCommission']??0.0,
        deliveryPrice: json['deliveryPrice']??0.0,
        type: json['type']??"",
        packageImage: json['packageImage']??'',
        packagePrice: json['packagePrice']??'',
      );

  Map<String, dynamic> toJson() => {
        'isForMe': isForMe,
        'isActive': isActive,
        'occasionName': occasionName,
        'occasionDate': occasionDate,
        'occasionId': occasionId,
        'occasionType': occasionType,
        'moneyGiftAmount': moneyGiftAmount,
        'personId': personId,
        'personName': personName,
        'personPhone': personPhone,
        'personEmail': personEmail,
        'occasionImage': giftImage,
        'giftName': giftName,
        'giftLink': giftLink,
        'giftPrice': giftPrice,
        'giftType': giftType,
        'isSharing': isSharing,
        'receiverName': receiverName,
        'receiverPhone': receiverPhone,
        'bankName': bankName,
        'ibanNumber': ibanNumber,
        'isContainName': isContainName,
        'giftCard': giftCard,
        'city': city,
        'district': district,
        'note': note,
        'isPrivate': isPrivate,
        'discount': discount,
        'appCommission': appCommission,
        'deliveryPrice': deliveryPrice,
        'type': type,
        'packageImage': packageImage,
        'packagePrice': packagePrice,
      };
}
